
#include "Configuration.h"
#include <iostream>

using namespace qr::utils;

Configuration Configuration::getConfiguration(uint version, encoding::ErrorCorrectionLevel EClevel) {
    /*
     * for each version and in every version
     * for 4 EClevel, there is
     *  × Total Number of Data Codewords for this Version and EC Level
     *  × EC Codewords Per Block
     *  × Number of Blocks in Group 1
     *  × Number of Data Codewords in Each of Group 1's Blocks
     *  × Number of Blocks in Group 2
     *  × Number of Data Codewords in Each of Group 2's Blocks
     */
    constexpr int table[160][7] = {
        {19, 7, 1, 19, 0, 0, 0},
        {16, 10, 1, 16, 0, 0, 0},
        {13, 13, 1, 13, 0, 0, 0},
        {9, 17, 1, 9, 0, 0, 0},
        {34, 10, 1, 34, 0, 0, 7},
        {28, 16, 1, 28, 0, 0, 7},
        {22, 22, 1, 22, 0, 0, 7},
        {16, 28, 1, 16, 0, 0, 7},
        {55, 15, 1, 55, 0, 0, 7},
        {44, 26, 1, 44, 0, 0, 7},
        {34, 18, 2, 17, 0, 0, 7},
        {26, 22, 2, 13, 0, 0, 7},
        {80, 20, 1, 80, 0, 0, 7},
        {64, 18, 2, 32, 0, 0, 7},
        {48, 26, 2, 24, 0, 0, 7},
        {36, 16, 4, 9, 0, 0, 7},
        {108, 26, 1, 108, 0, 0, 7},
        {86, 24, 2, 43, 0, 0, 7},
        {62, 18, 2, 15, 2, 16, 7},
        {46, 22, 2, 11, 2, 12, 7},
        {136, 18, 2, 68, 0, 0, 7},
        {108, 16, 4, 27, 0, 0, 7},
        {76, 24, 4, 19, 0, 0, 7},
        {60, 28, 4, 15, 0, 0, 7},
        {156, 20, 2, 78, 0, 0, 0},
        {124, 18, 4, 31, 0, 0, 0},
        {88, 18, 2, 14, 4, 15, 0},
        {66, 26, 4, 13, 1, 14, 0},
        {194, 24, 2, 97, 0, 0, 0},
        {154, 22, 2, 38, 2, 39, 0},
        {110, 22, 4, 18, 2, 19, 0},
        {86, 26, 4, 14, 2, 15, 0},
        {232, 30, 2, 116, 0, 0, 0},
        {182, 22, 3, 36, 2, 37, 0},
        {132, 20, 4, 16, 4, 17, 0},
        {100, 24, 4, 12, 4, 13, 0},
        {274, 18, 2, 68, 2, 69, 0},
        {216, 26, 4, 43, 1, 44, 0},
        {154, 24, 6, 19, 2, 20, 0},
        {122, 28, 6, 15, 2, 16, 0},
        {324, 20, 4, 81, 0, 0, 0},
        {254, 30, 1, 50, 4, 51, 0},
        {180, 28, 4, 22, 4, 23, 0},
        {140, 24, 3, 12, 8, 13, 0},
        {370, 24, 2, 92, 2, 93, 0},
        {290, 22, 6, 36, 2, 37, 0},
        {206, 26, 4, 20, 6, 21, 0},
        {158, 28, 7, 14, 4, 15, 0},
        {428, 26, 4, 107, 0, 0, 0},
        {334, 22, 8, 37, 1, 38, 0},
        {244, 24, 8, 20, 4, 21, 0},
        {180, 22, 12, 11, 4, 12, 0},
        {461, 30, 3, 115, 1, 116, 3},
        {365, 24, 4, 40, 5, 41, 3},
        {261, 20, 11, 16, 5, 17, 3},
        {197, 24, 11, 12, 5, 13, 3},
        {523, 22, 5, 87, 1, 88, 3},
        {415, 24, 5, 41, 5, 42, 3},
        {295, 30, 5, 24, 7, 25, 3},
        {223, 24, 11, 12, 7, 13, 3},
        {589, 24, 5, 98, 1, 99, 3},
        {453, 28, 7, 45, 3, 46, 3},
        {325, 24, 15, 19, 2, 20, 3},
        {253, 30, 3, 15, 13, 16, 3},
        {647, 28, 1, 107, 5, 108, 3},
        {507, 28, 10, 46, 1, 47, 3},
        {367, 28, 1, 22, 15, 23, 3},
        {283, 28, 2, 14, 17, 15, 3},
        {721, 30, 5, 120, 1, 121, 3},
        {563, 26, 9, 43, 4, 44, 3},
        {397, 28, 17, 22, 1, 23, 3},
        {313, 28, 2, 14, 19, 15, 3},
        {795, 28, 3, 113, 4, 114, 3},
        {627, 26, 3, 44, 11, 45, 3},
        {445, 26, 17, 21, 4, 22, 3},
        {341, 26, 9, 13, 16, 14, 3},
        {861, 28, 3, 107, 5, 108, 3},
        {669, 26, 3, 41, 13, 42, 3},
        {485, 30, 15, 24, 5, 25, 3},
        {385, 28, 15, 15, 10, 16, 3},
        {932, 28, 4, 116, 4, 117, 4},
        {714, 26, 17, 42, 0, 0, 4},
        {512, 28, 17, 22, 6, 23, 4},
        {406, 30, 19, 16, 6, 17, 4},
        {1006, 28, 2, 111, 7, 112, 4},
        {782, 28, 17, 46, 0, 0, 4},
        {568, 30, 7, 24, 16, 25, 4},
        {442, 24, 34, 13, 0, 0, 4},
        {1094, 30, 4, 121, 5, 122, 4},
        {860, 28, 4, 47, 14, 48, 4},
        {614, 30, 11, 24, 14, 25, 4},
        {464, 30, 16, 15, 14, 16, 4},
        {1174, 30, 6, 117, 4, 118, 4},
        {914, 28, 6, 45, 14, 46, 4},
        {664, 30, 11, 24, 16, 25, 4},
        {514, 30, 30, 16, 2, 17, 4},
        {1276, 26, 8, 106, 4, 107, 4},
        {1000, 28, 8, 47, 13, 48, 4},
        {718, 30, 7, 24, 22, 25, 4},
        {538, 30, 22, 15, 13, 16, 4},
        {1370, 28, 10, 114, 2, 115, 4},
        {1062, 28, 19, 46, 4, 47, 4},
        {754, 28, 28, 22, 6, 23, 4},
        {596, 30, 33, 16, 4, 17, 4},
        {1468, 30, 8, 122, 4, 123, 4},
        {1128, 28, 22, 45, 3, 46, 4},
        {808, 30, 8, 23, 26, 24, 4},
        {628, 30, 12, 15, 28, 16, 4},
        {1531, 30, 3, 117, 10, 118, 3},
        {1193, 28, 3, 45, 23, 46, 3},
        {871, 30, 4, 24, 31, 25, 3},
        {661, 30, 11, 15, 31, 16, 3},
        {1631, 30, 7, 116, 7, 117, 3},
        {1267, 28, 21, 45, 7, 46, 3},
        {911, 30, 1, 23, 37, 24, 3},
        {701, 30, 19, 15, 26, 16, 3},
        {1735, 30, 5, 115, 10, 116, 3},
        {1373, 28, 19, 47, 10, 48, 3},
        {985, 30, 15, 24, 25, 25, 3},
        {745, 30, 23, 15, 25, 16, 3},
        {1843, 30, 13, 115, 3, 116, 3},
        {1455, 28, 2, 46, 29, 47, 3},
        {1033, 30, 42, 24, 1, 25, 3},
        {793, 30, 23, 15, 28, 16, 3},
        {1955, 30, 17, 115, 0, 0, 3},
        {1541, 28, 10, 46, 23, 47, 3},
        {1115, 30, 10, 24, 35, 25, 3},
        {845, 30, 19, 15, 35, 16, 3},
        {2071, 30, 17, 115, 1, 116, 3},
        {1631, 28, 14, 46, 21, 47, 3},
        {1171, 30, 29, 24, 19, 25, 3},
        {901, 30, 11, 15, 46, 16, 3},
        {2191, 30, 13, 115, 6, 116, 3},
        {1725, 28, 14, 46, 23, 47, 3},
        {1231, 30, 44, 24, 7, 25, 3},
        {961, 30, 59, 16, 1, 17, 3},
        {2306, 30, 12, 121, 7, 122, 0},
        {1812, 28, 12, 47, 26, 48, 0},
        {1286, 30, 39, 24, 14, 25, 0},
        {986, 30, 22, 15, 41, 16, 0},
        {2434, 30, 6, 121, 14, 122, 0},
        {1914, 28, 6, 47, 34, 48, 0},
        {1354, 30, 46, 24, 10, 25, 0},
        {1054, 30, 2, 15, 64, 16, 0},
        {2566, 30, 17, 122, 4, 123, 0},
        {1992, 28, 29, 46, 14, 47, 0},
        {1426, 30, 49, 24, 10, 25, 0},
        {1096, 30, 24, 15, 46, 16, 0},
        {2702, 30, 4, 122, 18, 123, 0},
        {2102, 28, 13, 46, 32, 47, 0},
        {1502, 30, 48, 24, 14, 25, 0},
        {1142, 30, 42, 15, 32, 16, 0},
        {2812, 30, 20, 117, 4, 118, 0},
        {2216, 28, 40, 47, 7, 48, 0},
        {1582, 30, 43, 24, 22, 25, 0},
        {1222, 30, 10, 15, 67, 16, 0},
        {2956, 30, 19, 118, 6, 119, 0},
        {2334, 28, 18, 47, 31, 48, 0},
        {1666, 30, 34, 24, 34, 25, 0},
        {1276, 30, 20, 15, 61, 16, 0}
    };
    // the index will be the version*4 + ECevel
    uint row = (version - 1)*4 + (int) EClevel;

    Configuration config;
    config.totalCodewordsCount = table[row][0];
    config.ECCodewordsCount = table[row][1];
    config.groups[0].blockCount = table[row][2];
    config.groups[0].dataCodewordsInBlockCount = table[row][3];
    config.groups[1].blockCount = table[row][4];
    config.groups[1].dataCodewordsInBlockCount = table[row][5];
    config.remainderBits = table[row][6];
    return config;
}

std::ostream& qr::utils::operator<<(std::ostream& os, const qr::utils::Configuration& config) {
    os << "configuration:" << std::endl
            << "#totalcw........: " << config.totalCodewordsCount << std::endl
            << "#totalECcw......: " << config.ECCodewordsCount << std::endl
            << "#remainder bits : " << config.remainderBits << std::endl
            << "group1" << std::endl
            << "   #block.......: " << config.groups[0].blockCount << std::endl
            << "   #cwinblock...: " << config.groups[0].dataCodewordsInBlockCount << std::endl
            << "group2" << std::endl
            << "   #block.......: " << config.groups[1].blockCount << std::endl
            << "   #cwinblock...: " << config.groups[1].dataCodewordsInBlockCount << std::endl;
    return os;
}


